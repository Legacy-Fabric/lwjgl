plugins {
    id 'java-library'
}

// clean the generated files
tasks.register('clean-generated') {
    description = "Deletes the generated java source"

    for (final def fl in file(ant.properties['lwjgl.src'] + "/generated").listFiles()) {
        if (fl.isDirectory()) {
            fl.deleteDir()
        } else {
            fl.delete()
        }
    }
}

tasks.register('clean-generated-native') {
    description = "Deletes the generated native source"
    dependsOn("clean-generated")

    for (final def fl in file(ant.properties['lwjgl.src.native'] + "/generated").listFiles()) {
        if (fl.isDirectory()) {
            fl.deleteDir()
        } else {
            fl.delete()
        }
    }
}

// Cleans up any non-native files created during the execution of this script
tasks.register('clean-java') {
    description = "Cleans non-native files generated by this ant script"
    dependsOn("clean-generated")

    for (final def dir in [
            ant.properties['lwjgl.temp'],
            ant.properties['lwjgl.docs'] + "/javadoc",
            ant.properties['lwjgl.bin'] + "/org"]) {
        for (final def fl in file(dir).listFiles()) {
            if (fl.isDirectory()) {
                fl.deleteDir()
            } else {
                fl.delete()
            }
        }
    }
}

// Useful when we need to force native recompilation
tasks.register('clean-native') {
    description = "Cleans native files generated by this ant script"
    dependsOn("clean-generated-native")

    for (final def dir in [
            ant.properties['lwjgl.bin'] + "/lwjgles",
            ant.properties['lwjgl.bin'] + "/lwjgl"]) {
        for (final def fl in file(dir).listFiles()) {
            if (fl.isDirectory()) {
                fl.deleteDir()
            } else {
                fl.delete()
            }
        }
    }

    for (final def fl in file(ant.properties['lwjgl.src.native']).listFiles()) {
        if (fl.name.endsWith(".h")) {
            fl.delete()
        }
    }
}

def ported = [
        "clean-generated",
        "clean-generated-native",
        "clean-java",
        "clean-native"
]

ant.importBuild('build.xml') { String oldTargetName ->
    if (ported.contains(oldTargetName)) return oldTargetName
    return "a-" + oldTargetName
}